import{P as L,s as C,x as O,l as v,j as P,m as z,q as B,o as k,r as D,d as T,u as y,h as q,y as Q,z as F,A as G,Q as H}from"./scheduler.CZixQE4Q.js";import{S as J,i as K,d as p,q as R,v as V,r as j,a as b,b as W,c as X,t as Y,h as Z}from"./index.BQyUQ7-O.js";import{g as M}from"./spread.CgU5AtxT.js";function ne(t,e){throw new Error("[MELTUI ERROR]: The `use:melt` action cannot be used without MeltUI's Preprocessor. See: https://www.melt-ui.com/docs/preprocessor")}function se(t,e){const o={};return e.forEach(n=>{o[n]={[`data-${t}-${n}`]:""}}),n=>o[n]}function ie(t){return t?{"aria-disabled":"true","data-disabled":""}:{"aria-disabled":void 0,"data-disabled":void 0}}function re(){const t=L();return e=>{const{originalEvent:o}=e.detail,{cancelable:n}=e,h=o.type;t(h,{originalEvent:o,currentTarget:o.currentTarget},{cancelable:n})||e.preventDefault()}}/**
 * @license lucide-svelte v0.367.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const x={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor","stroke-width":2,"stroke-linecap":"round","stroke-linejoin":"round"},I=x,U="node_modules/lucide-svelte/dist/Icon.svelte";function A(t,e,o){const n=t.slice();return n[10]=e[o][0],n[11]=e[o][1],n}function w(t){let e,o=[t[11]],n={};for(let l=0;l<o.length;l+=1)n=v(n,o[l]);const h={c:function(){e=B(t[10]),this.h()},l:function(i){e=D(i,t[10],{}),T(e).forEach(b),this.h()},h:function(){y(e,n),q(e,U,23,4,555)},m:function(i,r){W(i,e,r)},p:function(i,r){y(e,n=M(o,[r&32&&i[11]]))},d:function(i){i&&b(e)}};return p("SvelteRegisterBlock",{block:h,id:w.name,type:"child_dynamic_element",source:"(24:4) <svelte:element this={tag} {...attrs}/>",ctx:t}),h}function E(t){let e=t[10],o;j(t[10]);let n=t[10]&&w(t);const h={c:function(){n&&n.c(),o=k()},l:function(i){n&&n.l(i),o=k()},m:function(i,r){n&&n.m(i,r),W(i,o,r)},p:function(i,r){i[10]?e?C(e,i[10])?(n.d(1),j(i[10]),n=w(i),e=i[10],n.c(),n.m(o.parentNode,o)):n.p(i,r):(n=w(i),e=i[10],n.c(),n.m(o.parentNode,o)):e&&(n.d(1),n=null,e=i[10])},d:function(i){i&&b(o),n&&n.d(i)}};return p("SvelteRegisterBlock",{block:h,id:E.name,type:"each",source:"(23:2) {#each iconNode as [tag, attrs]}",ctx:t}),h}function N(t){let e,o,n,h,l,i=R(t[5]),r=[];for(let s=0;s<i.length;s+=1)r[s]=E(A(t,i,s));const f=t[9].default,u=O(f,t,t[8],null);let g=[I,t[6],{width:t[2]},{height:t[2]},{stroke:t[1]},{"stroke-width":n=t[4]?Number(t[3])*24/Number(t[2]):t[3]},{class:h=`lucide-icon lucide lucide-${t[0]} ${t[7].class??""}`}],m={};for(let s=0;s<g.length;s+=1)m=v(m,g[s]);const _={c:function(){e=B("svg");for(let c=0;c<r.length;c+=1)r[c].c();o=k(),u&&u.c(),this.h()},l:function(c){e=D(c,"svg",{width:!0,height:!0,stroke:!0,"stroke-width":!0,class:!0});var d=T(e);for(let a=0;a<r.length;a+=1)r[a].l(d);o=k(),u&&u.l(d),d.forEach(b),this.h()},h:function(){y(e,m),q(e,U,9,0,235)},m:function(c,d){W(c,e,d);for(let a=0;a<r.length;a+=1)r[a]&&r[a].m(e,null);X(e,o),u&&u.m(e,null),l=!0},p:function(c,[d]){if(d&32){i=R(c[5]);let a;for(a=0;a<i.length;a+=1){const S=A(c,i,a);r[a]?r[a].p(S,d):(r[a]=E(S),r[a].c(),r[a].m(e,o))}for(;a<r.length;a+=1)r[a].d(1);r.length=i.length}u&&u.p&&(!l||d&256)&&Q(u,f,c,c[8],l?G(f,c[8],d,null):F(c[8]),null),y(e,m=M(g,[I,d&64&&c[6],(!l||d&4)&&{width:c[2]},(!l||d&4)&&{height:c[2]},(!l||d&2)&&{stroke:c[1]},(!l||d&28&&n!==(n=c[4]?Number(c[3])*24/Number(c[2]):c[3]))&&{"stroke-width":n},(!l||d&129&&h!==(h=`lucide-icon lucide lucide-${c[0]} ${c[7].class??""}`))&&{class:h}]))},i:function(c){l||(Y(u,c),l=!0)},o:function(c){Z(u,c),l=!1},d:function(c){c&&b(e),H(r,c),u&&u.d(c)}};return p("SvelteRegisterBlock",{block:_,id:N.name,type:"component",source:"",ctx:t}),_}function $(t,e,o){const n=["name","color","size","strokeWidth","absoluteStrokeWidth","iconNode"];let h=P(e,n),{$$slots:l={},$$scope:i}=e;V("Icon",l,["default"]);let{name:r}=e,{color:f="currentColor"}=e,{size:u=24}=e,{strokeWidth:g=2}=e,{absoluteStrokeWidth:m=!1}=e,{iconNode:_}=e;return t.$$.on_mount.push(function(){r===void 0&&!("name"in e||t.$$.bound[t.$$.props.name])&&console.warn("<Icon> was created without expected prop 'name'"),_===void 0&&!("iconNode"in e||t.$$.bound[t.$$.props.iconNode])&&console.warn("<Icon> was created without expected prop 'iconNode'")}),t.$$set=s=>{o(7,e=v(v({},e),z(s))),o(6,h=P(e,n)),"name"in s&&o(0,r=s.name),"color"in s&&o(1,f=s.color),"size"in s&&o(2,u=s.size),"strokeWidth"in s&&o(3,g=s.strokeWidth),"absoluteStrokeWidth"in s&&o(4,m=s.absoluteStrokeWidth),"iconNode"in s&&o(5,_=s.iconNode),"$$scope"in s&&o(8,i=s.$$scope)},t.$capture_state=()=>({defaultAttributes:I,name:r,color:f,size:u,strokeWidth:g,absoluteStrokeWidth:m,iconNode:_}),t.$inject_state=s=>{o(7,e=v(v({},e),s)),"name"in e&&o(0,r=s.name),"color"in e&&o(1,f=s.color),"size"in e&&o(2,u=s.size),"strokeWidth"in e&&o(3,g=s.strokeWidth),"absoluteStrokeWidth"in e&&o(4,m=s.absoluteStrokeWidth),"iconNode"in e&&o(5,_=s.iconNode)},e&&"$$inject"in e&&t.$inject_state(e.$$inject),e=z(e),[r,f,u,g,m,_,h,e,i,l]}class ce extends J{constructor(e){super(e),K(this,e,$,N,C,{name:0,color:1,size:2,strokeWidth:3,absoluteStrokeWidth:4,iconNode:5}),p("SvelteRegisterComponent",{component:this,tagName:"Icon",options:e,id:N.name})}get name(){throw new Error("<Icon>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set name(e){throw new Error("<Icon>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get color(){throw new Error("<Icon>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set color(e){throw new Error("<Icon>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get size(){throw new Error("<Icon>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set size(e){throw new Error("<Icon>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get strokeWidth(){throw new Error("<Icon>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set strokeWidth(e){throw new Error("<Icon>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get absoluteStrokeWidth(){throw new Error("<Icon>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set absoluteStrokeWidth(e){throw new Error("<Icon>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get iconNode(){throw new Error("<Icon>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set iconNode(e){throw new Error("<Icon>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}export{ce as I,re as a,se as c,ie as d,ne as m};
